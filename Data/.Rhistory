##########Diap############
##Lipid Mass btw  Strain##
####### Dia Day 15 #######
dataD15=subset(data,photoperiod!="16")
dataD15=subset(dataD15,sample_day=="W15")
dataD15=subset(dataD15,lipid_mass!="NA")
dataD15=subset(dataD15,lipid_mass>="0")
#this model attempts to fit the linear mixed effects model with 3 variables; photoperiod, lean mass, and the random effect of rep
mixedD15=lmer(lipid_mass ~ strain + (1|rep) ,data=dataD15, REML = TRUE)
summary(mixedD15)
plot(mixedD15)
##The following model removes photoperiod as factors to determine the effect of lean mass and Rep on lipid mass
submod=lmer(lipid_mass ~ (1|rep),data=dataD15, REML = TRUE)
summary(submod)
## Standard Residuals -  Adding stdres to df and checking for regularity of distribution within +/-2 standard deviations
dataD15$stdresD15<-as.vector(scale(resid(submod)))
ggplot(dataD15,aes(x=strain,y=lipid_mass, group=strain))+
geom_boxplot()+
theme_classic()+
ggtitle("Diapause Exposure on Day 15: Effect of Strain")+
ylab("Lipid Mass")
##########Diap############
##Lipid Mass btw  Strain##
###### Dia Day 20 ########
dataD20=subset(data,photoperiod!="16")
dataD20=subset(dataD20,sample_day=="W20")
dataD20=subset(dataD20,lipid_mass!="NA")
dataD20=subset(dataD20,lipid_mass>="0")
dataD20=subset(dataD20,lipid_mass<="0.02")
#this model attempts to fit the linear mixed effects model with 3 variables; photoperiod, lean mass, and the random effect of rep
mixedD20=lmer(lipid_mass ~ strain + (1|rep) ,data=dataD20, REML = TRUE)
summary(mixedD20)
plot(mixedD20)
##The following model removes photoperiod as factors to determine the effect of lean mass and Rep on lipid mass
submod=lmer(lipid_mass ~ (1|rep),data=dataD20, REML = TRUE)
summary(submod)
## Standard Residuals -  Adding stdres to df and checking for regularity of distribution within +/-2 standard deviations
dataD20$stdresD20<-as.vector(scale(resid(submod)))
ggplot(dataD20,aes(x=strain,y=lipid_mass, group=strain))+
geom_boxplot()+
theme_classic()+
ggtitle("Diapause Exposure on Day 20: Effect of Strain")+
ylab("Lipid Mass")
##########Diap############
##Lipid Mass btw  Strain##
###### Dia Day 30 ########
dataD30=subset(data,photoperiod!="16")
dataD30=subset(dataD30,sample_day=="W30")
dataD30=subset(dataD30,lipid_mass!="NA")
dataD30=subset(dataD30,lipid_mass>="0")
#this model attempts to fit the linear mixed effects model with 3 variables; photoperiod, lean mass, and the random effect of rep
mixedD30=lmer(lipid_mass ~ strain + (1|rep) ,data=dataD30, REML = TRUE)
summary(mixedD30)
plot(mixedD30)
##The following model removes photoperiod as factors to determine the effect of lean mass and Rep on lipid mass
submod=lmer(lipid_mass ~ (1|rep),data=dataD30, REML = TRUE)
summary(submod)
## Standard Residuals -  Adding stdres to df and checking for regularity of distribution within +/-2 standard deviations
dataD30$stdresD30<-as.vector(scale(resid(submod)))
ggplot(dataD30,aes(x=strain,y=lipid_mass, group=strain))+
geom_boxplot()+
theme_classic()+
ggtitle("Diapause Exposure on Day 30: Effect of Strain")+
ylab("Lipid Mass")
##########NDia############
##Lipid Mass btw  Strain##
######## Day 1 ###########
dataND=subset(data,photoperiod!="12")
dataND=subset(data,sample_day=="1")
dataND=subset(dataND,lipid_mass!="NA")
dataND=subset(dataND,lipid_mass>="0")
dataND=subset(dataND,lipid_mass<="0.02")
#this model attempts to fit the linear mixed effects model with 3 variables; photoperiod, lean mass, and the random effect of rep
mixedND=lmer(lipid_mass ~ strain + (1|rep) ,data=dataND, REML = TRUE)
summary(mixedND)
plot(mixedND)
##The following model removes photoperiod as factors to determine the effect of lean mass and Rep on lipid mass
submod=lmer(lipid_mass ~ (1|rep),data=dataND, REML = TRUE)
summary(submod)
## Standard Residuals -  Adding stdres to df and checking for regularity of distribution within +/-2 standard deviations
dataND$stdresND<-as.vector(scale(resid(submod)))
ggplot(dataND,aes(x=strain,y=lipid_mass, group=strain))+
geom_boxplot()+
theme_classic()+
ggtitle("Non-Diapause Exposure on Day 1: Effect of Strain")+
ylab("Lipid Mass")
##########NDia############
##Lipid Mass btw  Strain##
######## Day W ###########
dataND=subset(data,photoperiod!="12")
dataND=subset(data,sample_day=="W")
dataND=subset(dataND,lipid_mass!="NA")
dataND=subset(dataND,lipid_mass>="0")
dataND=subset(dataND,lipid_mass<="0.02")
#this model attempts to fit the linear mixed effects model with 3 variables; photoperiod, lean mass, and the random effect of rep
mixedND=lmer(lipid_mass ~ strain + (1|rep) ,data=dataND, REML = TRUE)
summary(mixedND)
plot(mixedND)
##The following model removes photoperiod as factors to determine the effect of lean mass and Rep on lipid mass
submod=lmer(lipid_mass ~ (1|rep),data=dataND, REML = TRUE)
summary(submod)
## Standard Residuals -  Adding stdres to df and checking for regularity of distribution within +/-2 standard deviations
dataND$stdresND<-as.vector(scale(resid(submod)))
ggplot(dataND,aes(x=strain,y=lipid_mass, group=strain))+
geom_boxplot()+
theme_classic()+
ggtitle("Non-Diapause Exposure on Wander Day: Effect of Strain")+
ylab("Lipid Mass")
##########################
##Lipid Mass INTRX Strain#
######## Day 1 ###########
dataI1=subset(data,lipid_mass!="NA")
dataI1=subset(dataI1,sample_day=="1")
dataI1=subset(dataI1,lipid_mass>="0")
dataI1=subset(dataI1,lipid_mass<="0.02")
#this model attempts to fit the linear mixed effects model with 3 variables; photoperiod, lean mass, and the random effect of rep
mixedI1=lmer(lipid_mass ~ photoperiod*strain+(1|rep),data=dataI1, REML = TRUE)
summary(mixedI1)
plot(mixedI1)
##The following model removes strain and photoperiod as factors to determine the effect of lean mass and Rep on lipid mass
submod=lmer(lipid_mass ~ (1|rep),data=dataI1, REML = TRUE)
summary(submod)
## Standard Residuals -  Adding stdres to df and checking for regularity of distribution within +/-2 standard deviations
dataI1$stdresI1<-as.vector(scale(resid(submod)))
ggplot(dataI1,aes(x=strain,y=lipid_mass, group=strain))+
geom_boxplot()+
theme_classic()+
ggtitle("Interaction Day 1: Effect of Photoperiod x  Strain")+
ylab("Lipid Mass")
##########################
##Lipid Mass INTRX Strain#
######## Day W ###########
dataIW=subset(data,lipid_mass!="NA")
dataIW=subset(dataIW,sample_day=="W")
dataIW=subset(dataIW,lipid_mass>="0")
dataIW=subset(dataIW,lipid_mass<="0.02")
#this model attempts to fit the linear mixed effects model with 3 variables; photoperiod, lean mass, and the random effect of rep
mixedIW=lmer(lipid_mass ~ photoperiod*strain+(1|rep),data=dataIW, REML = TRUE)
summary(mixedIW)
plot(mixedIW)
##The following model removes strain and photoperiod as factors to determine the effect of lean mass and Rep on lipid mass
submod=lmer(lipid_mass ~ (1|rep),data=dataIW, REML = TRUE)
summary(submod)
## Standard Residuals -  Adding stdres to df and checking for regularity of distribution within +/-2 standard deviations
dataIW$stdresIW<-as.vector(scale(resid(submod)))
ggplot(dataIW,aes(x=strain,y=lipid_mass, group=strain))+
geom_boxplot()+
theme_classic()+
ggtitle("Interaction Wandering Day: Effect of Photoperiod x  Strain")+
ylab("Lipid Mass")
##########Diap############
##Lipid Mass btw  Strain##
###### Dia Day 30 ########
dataD30=subset(data,photoperiod!="16")
dataD30=subset(dataD30,sample_day=="W30")
dataD30=subset(dataD30,lipid_mass!="NA")
dataD30=subset(dataD30,lipid_mass>="0")
#this model attempts to fit the linear mixed effects model with 3 variables; photoperiod, lean mass, and the random effect of rep
mixedD30=lmer(lipid_mass ~ strain + (1|rep) ,data=dataD30, REML = TRUE)
summary(mixedD30)
plot(mixedD30)
##The following model removes photoperiod as factors to determine the effect of lean mass and Rep on lipid mass
submod=lmer(lipid_mass ~ (1|rep),data=dataD30, REML = TRUE)
summary(submod)
## Standard Residuals -  Adding stdres to df and checking for regularity of distribution within +/-2 standard deviations
dataD30$stdresD30<-as.vector(scale(resid(submod)))
ggplot(dataD30,aes(x=strain,y=lipid_mass, group=strain))+
geom_boxplot()+
theme_classic()+
ggtitle("Diapause Exposure on Day 30: Effect of Strain")+
ylab("Lipid Mass")
knitr::opts_chunk$set(echo = TRUE)
DiagrammeR::mermaid("
graph TD
A[Organize Data] -->|Collect, Annotate, Save| B(Draw Preidction Graphs)
B --> C{Analyze Data}
C -->|Numeric| D[Parametric use ANOVA/T-Test] D[Otherwise use U Test/Wilcox/H test]
C -->|Categorical| E[iPhone]
C -->|Three| F[Car]")
knitr::opts_chunk$set(echo = TRUE)
install.packages("DiagrammeR")
DiagrammeR::mermaid("
graph TD
A[Organize Data] -->|Collect, Annotate, Save| B(Draw Preidction Graphs)
B --> C{Analyze Data}
C -->|Numeric| D[Parametric use ANOVA/T-Test] D[Otherwise use U Test/Wilcox/H test]
C -->|Categorical| E[iPhone]
C -->|Three| F[Car]")
# Question 1: Is there a difference between groups that are unpaired? Groups or data sets are regarded as unpaired if there is no possibility of the values in one data set being related to or being influenced by the values in the other data sets. Different tests are required for quantitative or numerical data and qualitative or categorical data as shown in Fig. 1. For numerical data, it is important to decide if they follow the parameters of the normal distribution curve (Gaussian curve), in which case parametric tests are applied. If distribution of the data is not normal or if one is not sure about the distribution, it is safer to use non-parametric tests. When comparing more than two sets of numerical data, a multiple group comparison test such as one-way analysis of variance (ANOVA) or Kruskal-Wallis test should be used first. If they return a statistically significant p value (usually meaning p < 0.05) then only they should be followed by a post hoc test to determine between exactly which two data sets the difference lies. Repeatedly applying the t test or its non-parametric counterpart, the Mann-Whitney U test, to a multiple group situation increases the possibility of incorrectly rejecting the null hypothesis.
DiagrammeR::mermaid("
graph TD
A[Organize Data] -->|Collect, Annotate, Save| B(Draw Preidction Graphs)
B --> C{Analyze Data}
C -->|Numeric| D[Parametric use ANOVA/T-Test] | D[Otherwise use U Test/Wilcox/H test]
C -->|Categorical| E[iPhone]
C -->|Three| F[Car]")
# Question 1: Is there a difference between groups that are unpaired? Groups or data sets are regarded as unpaired if there is no possibility of the values in one data set being related to or being influenced by the values in the other data sets. Different tests are required for quantitative or numerical data and qualitative or categorical data as shown in Fig. 1. For numerical data, it is important to decide if they follow the parameters of the normal distribution curve (Gaussian curve), in which case parametric tests are applied. If distribution of the data is not normal or if one is not sure about the distribution, it is safer to use non-parametric tests. When comparing more than two sets of numerical data, a multiple group comparison test such as one-way analysis of variance (ANOVA) or Kruskal-Wallis test should be used first. If they return a statistically significant p value (usually meaning p < 0.05) then only they should be followed by a post hoc test to determine between exactly which two data sets the difference lies. Repeatedly applying the t test or its non-parametric counterpart, the Mann-Whitney U test, to a multiple group situation increases the possibility of incorrectly rejecting the null hypothesis.
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
dataBEr1m=dataBEr1s %>%
dplyr::select(syringe,day,treat,mass) %>%
group_by(syringe) %>%
filter(syringe==1:50)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(splines)
library(stats)
library(readxl)
library(ggplot2)
library(nlme)
library(lme4)
library(lmerTest)
library(ez)
library(lsr)
library(dplyr)
library(tidyr)
library(googleVis)
library(MASS)
library(doBy)
library(plyr)
#############--------------Read in the data-----------------######################
#PC
setwd("/Users/jbrown/Documents/GitHub/Respirometry/Data/")
data=read_excel("Respir.xlsx")
#MAC
#data=read_excel("/Users/JamesB/Google Drive/Graduate School/Self_JamesTBrown/GitHub/Respirometry/Data/Respir.xlsx", sheet = "Sheet1")
############## Data Prep ###################
data=subset(data, VCO2!="NA") # Remove NAs from df
data=subset(data, syringe!="Blank Control") #Removing "Blank Control" syringes
data$syringe=as.character(data$syringe) #Set "syringe" as a character
data$strain<-as.factor(data$strain) #set strain as ind var
data$treat<-as.factor(data$treat) #set treat as factor as ind var
# Chunk 3
##########################################
#df BE Rep1 Stages Plots and Data Analysis
##########################################
dataBEr1s=data #subset of main df into BE rep1
dataBEr1s=subset(dataBEr1s, treat=="1" | treat=="2")
dataBEr1s=subset(dataBEr1s, Tray=="12,23 1201-01"|Tray=="12,23 1201-02"|Tray=="16,23 1202"|Tray=="16,23 1201")
##########################################
#df BE Rep2 Stages Plots and Data Analysis
##########################################
dataBEr2s=data #subset of main df into BE rep 2
dataBEr2s=subset(dataBEr2s, treat=="1" | treat=="2")
dataBEr2s=subset(dataBEr2s, Tray=="16,23 0206" | Tray=="12,23 0208")
##########################################
#df UZ Rep1 Stages Plots and Data Analysis
##########################################
dataUZr1s=data #subset of main df into UZ rep 1
dataUZr1s=subset(dataUZr1s, treat=="1" | treat=="2")
dataUZr1s=subset(dataUZr1s, Tray=="16,23 1228" | Tray=="12,23 1228")
# Chunk 4
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
dataBEr1m=dataBEr1s %>%
dplyr::select(syringe,day,treat,mass) %>%
group_by(syringe) %>%
filter(syringe==1:50)
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(reshape2)
library(growthcurver)
library(lattice)
library(reshape2)
install.packages("growthcurver")
library(growthcurver)
library(purrr)
library(splines)
library(stats)
library(readxl)
library(ggplot2)
library(nlme)
library(lme4)
library(lmerTest)
library(ez)
library(lsr)
library(dplyr)
library(tidyr)
library(googleVis)
library(MASS)
library(doBy)
library(plyr)
library(tidyverse)
#############--------------Read in the data-----------------######################
#PC
#setwd("/Users/jbrown/Documents/GitHub/Respirometry/Data/")
#data=read_excel("Respir.xlsx")
#MAC
data=read_excel("/Users/JamesB/Google Drive/Graduate School/Self_JamesTBrown/GitHub/Respirometry/Data/Respir.xlsx", sheet = "Sheet1")
library(lattice)
library(reshape2)
library(growthcurver)
library(purrr)
library(splines)
library(stats)
library(readxl)
library(ggplot2)
library(nlme)
library(lme4)
library(lmerTest)
library(ez)
library(lsr)
library(dplyr)
library(tidyr)
library(googleVis)
library(MASS)
library(doBy)
library(plyr)
library(tidyverse)
#############--------------Read in the data-----------------######################
#PC
#setwd("/Users/jbrown/Documents/GitHub/Respirometry/Data/")
#data=read_excel("Respir.xlsx")
#MAC
data=read_excel("/Users/JamesB/Google Drive/Graduate School/Self_JamesTBrown/GitHub/Respirometry/Data/Respir.xlsx", sheet = "Sheet1")
library(lattice)
library(reshape2)
library(growthcurver)
library(purrr)
library(splines)
library(stats)
library(readxl)
library(ggplot2)
library(nlme)
library(lme4)
library(lmerTest)
library(ez)
library(lsr)
library(dplyr)
library(tidyr)
library(googleVis)
library(MASS)
library(doBy)
library(plyr)
library(tidyverse)
#############--------------Read in the data-----------------######################
#PC
setwd("/Users/jbrown/Documents/GitHub/Respirometry/Data/")
data=read_excel("Respir.xlsx")
#MAC
#data=read_excel("/Users/JamesB/Google Drive/Graduate School/Self_JamesTBrown/GitHub/Respirometry/Data/Respir.xlsx", sheet = "Sheet1")
############## Data Prep ###################
data=subset(data, VCO2!="NA") # Remove NAs from df
data=subset(data, syringe!="Blank Control") #Removing "Blank Control" syringes
data$syringe=as.character(data$syringe) #Set "syringe" as a character
data$strain<-as.factor(data$strain) #set strain as ind var
data$treat<-as.factor(data$treat) #set treat as factor as ind var
##########################################
#df BE Rep1 Stages Plots and Data Analysis
##########################################
dataBEr1s=data #subset of main df into BE rep1
dataBEr1s=subset(dataBEr1s, treat=="1" | treat=="2")
dataBEr1s=subset(dataBEr1s, Tray=="12,23 1201-01"|Tray=="12,23 1201-02"|Tray=="16,23 1202"|Tray=="16,23 1201")
##########################################
#df BE Rep2 Stages Plots and Data Analysis
##########################################
dataBEr2s=data #subset of main df into BE rep 2
dataBEr2s=subset(dataBEr2s, treat=="1" | treat=="2")
dataBEr2s=subset(dataBEr2s, treat=="1" | stage=="L")
dataBEr2s=subset(dataBEr2s, Tray=="16,23 0206" | Tray=="12,23 0208")
dataBEr2s=subset(dataBEr2s,co2_hourly_mass!="NA")
##########################################
#df UZ Rep1 Stages Plots and Data Analysis
##########################################
dataUZr1s=data #subset of main df into UZ rep 1
dataUZr1s=subset(dataUZr1s, treat=="1" | treat=="2")
dataUZr1s=subset(dataUZr1s, treat=="1" | stage=="L")
dataUZr1s=subset(dataUZr1s, Tray=="16,23 1228" | Tray=="12,23 1228")
dataUZr1s=subset(dataUZr1s,co2_hourly_mass!="NA")
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
dataBEr1m=dataBEr1s %>%
dplyr::select(syringe,day,treat,mass) %>%
group_by(syringe) %>%
filter(syringe==1:50)
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
dataBEr1m=dataBEr1s %>%
dplyr::select(syringe,day,treat,mass) %>%
group_by(syringe) %>%
filter(syringe=="1")
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
dataBEr1m=dataBEr1s %>%
dplyr::select(syringe,day,treat,mass) %>%
group_by(syringe) %>%
filter(syringe=="1")%>%
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data%>%
group_by(Tray) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data%>%
group_by(Tray) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
View(data)
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data=df%>%
group_by(Tray) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
data=df%>%
group_by(Tray) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data=df%>%
group_by(Tray) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data=df%>%
group_by(start) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data=df%>%
dyplrgroup_by(start) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data=df%>%
dyplr::group_by(start) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
install.packages("dyplr")
library(lattice)
library(reshape2)
library(growthcurver)
library(purrr)
library(splines)
library(stats)
library(readxl)
library(ggplot2)
library(nlme)
library(lme4)
library(lmerTest)
library(ez)
library(lsr)
library(dplyr)
library(tidyr)
library(googleVis)
library(MASS)
library(doBy)
library(plyr)
library(tidyverse)
#############--------------Read in the data-----------------######################
#PC
setwd("/Users/jbrown/Documents/GitHub/Respirometry/Data/")
data=read_excel("Respir.xlsx")
#MAC
#data=read_excel("/Users/JamesB/Google Drive/Graduate School/Self_JamesTBrown/GitHub/Respirometry/Data/Respir.xlsx", sheet = "Sheet1")
############## Data Prep ###################
data=subset(data, VCO2!="NA") # Remove NAs from df
data=subset(data, syringe!="Blank Control") #Removing "Blank Control" syringes
data$syringe=as.character(data$syringe) #Set "syringe" as a character
data$strain<-as.factor(data$strain) #set strain as ind var
data$treat<-as.factor(data$treat) #set treat as factor as ind var
install.packages(c("broom", "callr", "car", "curl", "data.table", "DBI", "dbplyr", "doBy", "Formula", "ggplot2", "haven", "htmlTable", "htmlwidgets", "igraph", "lme4", "lmerTest", "lubridate", "modelr", "munsell", "nlme", "packrat", "psych", "purrr", "quantreg", "Rcpp", "RCurl", "readxl", "reprex", "selectr", "tidyr", "viridis", "withr"))
install.packages(c("caTools", "cluster", "evaluate", "foreign", "glue", "highr", "MASS", "Matrix", "mgcv", "nlme", "pillar", "Rcpp", "readxl", "rlang", "rmarkdown", "rpart", "stringi", "stringr", "survival", "utf8", "yaml"), lib="C:/Users/jbrown/Documents/R/R-3.4.3/library")
install.packages(c("caTools", "cluster", "evaluate", "foreign", "glue", "highr", "MASS", "Matrix", "mgcv", "nlme", "pillar", "Rcpp", "readxl", "rlang", "rmarkdown", "rpart", "stringi", "stringr", "survival", "utf8", "yaml"), lib = "C:/Users/jbrown/Documents/R/R-3.4.3/library")
install.packages(c("caTools", "cluster", "evaluate", "foreign", "glue", "highr", "MASS", "Matrix", "mgcv", "nlme", "pillar", "Rcpp", "readxl", "rlang", "rmarkdown", "rpart", "stringi", "stringr", "survival", "utf8", "yaml"), lib = "C:/Users/jbrown/Documents/R/R-3.4.3/library")
install.packages(c("caTools", "cluster", "evaluate", "foreign", "glue", "highr", "MASS", "Matrix", "mgcv", "nlme", "pillar", "Rcpp", "readxl", "rlang", "rmarkdown", "rpart", "stringi", "stringr", "survival", "utf8", "yaml"), lib = "C:/Users/jbrown/Documents/R/R-3.4.3/library")
knitr::opts_chunk$set(echo = TRUE)
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data=df%>%
dyplr::group_by(start) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(reshape2)
library(growthcurver)
library(purrr)
library(splines)
library(stats)
library(readxl)
library(ggplot2)
library(nlme)
library(lme4)
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(reshape2)
library(growthcurver)
library(purrr)
library(splines)
library(stats)
library(readxl)
library(ggplot2)
library(nlme)
library(lme4)
data=df%>%
dyplr::group_by(start) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
#Task 1: Plot the points along with the known theroitical function
#Select and Group individuals Mass Recordings
data=df%>%
dyplr::group_by(start) %>% #do the count by family
arrange(day,syringe,mass) %>% #sort by date
mutate(callindex=1:n()) #create call index that's 1:end for each family
